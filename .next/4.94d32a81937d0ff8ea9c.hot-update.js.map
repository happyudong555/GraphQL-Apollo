{"version":3,"file":"4.94d32a81937d0ff8ea9c.hot-update.js","sources":["webpack:///apollo/initApollo.js"],"sourcesContent":["import { ApolloClient, createNetworkInterface } from \"react-apollo\";\nimport fetch from \"isomorphic-fetch\";\n\nlet apolloClient = null;\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!process.browser) {\n  global.fetch = fetch;\n}\n\nfunction create(headers, initialState) {\n  return new ApolloClient({\n    initialState,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    networkInterface: createNetworkInterface({\n      uri: \"http://localhost:3000/graphql\", // Server URL (must be absolute)\n      opts: {\n        // Additional fetch() options like `credentials` or `headers`\n        credentials: \"same-origin\"\n      }\n    })\n  });\n}\n\nexport default function initApollo(headers, initialState = {}) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return create(headers, initialState);\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(headers, initialState);\n  }\n\n  return apolloClient;\n}\n\n\n// WEBPACK FOOTER //\n// apollo/initApollo.js"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAHA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAlCA;AAOA;AAcA;;;;;;;;;A","sourceRoot":""}