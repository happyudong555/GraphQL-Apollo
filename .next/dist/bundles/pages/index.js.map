{"version":3,"file":"bundles/pages/index.js","sources":["webpack:///webpack/bootstrap bb83afa444d2f12b974d","webpack:///apollo/initApollo.js","webpack:///apollo/withData.js","webpack:///pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"graphql-tag\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bb83afa444d2f12b974d","import { ApolloClient, createNetworkInterface } from \"react-apollo\";\nimport fetch from \"isomorphic-fetch\";\n\nlet apolloClient = null;\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!process.browser) {\n  global.fetch = fetch;\n}\n\nfunction create(headers, initialState) {\n  return new ApolloClient({\n    initialState,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    networkInterface: createNetworkInterface({\n      uri: \"http://localhost:3000/graphql\", // Server URL (must be absolute)\n      opts: {\n        // Additional fetch() options like `credentials` or `headers`\n        credentials: \"same-origin\"\n      }\n    })\n  });\n}\n\nexport default function initApollo(headers, initialState = {}) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return create(headers, initialState);\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(headers, initialState);\n  }\n\n  return apolloClient;\n}\n\n\n// WEBPACK FOOTER //\n// apollo/initApollo.js","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ApolloProvider, getDataFromTree } from \"react-apollo\";\nimport initApollo from \"./initApollo\";\n\nexport default ComposedComponent => {\n  return class WithData extends React.Component {\n    static displayName = `WithData(${ComposedComponent.displayName})`;\n    static propTypes = {\n      serverState: PropTypes.object.isRequired\n    };\n\n    static async getInitialProps(ctx) {\n      const headers = ctx.req ? ctx.req.headers : {};\n      let serverState = {};\n\n      // Evaluate the composed component's getInitialProps()\n      let composedInitialProps = {};\n      if (ComposedComponent.getInitialProps) {\n        composedInitialProps = await ComposedComponent.getInitialProps(ctx);\n      }\n\n      // Run all graphql queries in the component tree\n      // and extract the resulting data\n      if (!process.browser) {\n        const apollo = initApollo(headers);\n        // Provide the `url` prop data in case a graphql query uses it\n        const url = { query: ctx.query, pathname: ctx.pathname };\n\n        // Run all graphql queries\n        const app = (\n          <ApolloProvider client={apollo}>\n            <ComposedComponent url={url} {...composedInitialProps} />\n          </ApolloProvider>\n        );\n        await getDataFromTree(app);\n\n        // Extract query data from the Apollo's store\n        const state = apollo.getInitialState();\n\n        serverState = {\n          apollo: {\n            // Make sure to only include Apollo's data state\n            data: state.data\n          }\n        };\n      }\n\n      return {\n        serverState,\n        headers,\n        ...composedInitialProps\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.apollo = initApollo(this.props.headers, this.props.serverState);\n    }\n\n    render() {\n      return (\n        <ApolloProvider client={this.apollo}>\n          <ComposedComponent {...this.props} />\n        </ApolloProvider>\n      );\n    }\n  };\n};\n\n\n// WEBPACK FOOTER //\n// apollo/withData.js","import React from 'react';\nimport {graphql} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport withData from '../apollo/withData'\nconst Query = gql \n`{\n    products {\n      id\n      name\n    }\n}`\nclass App extends React.Component {\n  productsRender() {\n    let data = this.props.data;\n    if (data.loading) {\n      return (\n        <div>loading products ...</div>\n      )\n    }\n    else {\n      return data.products.map(product => {\n        return (\n          <h1>{product.name}</h1>\n        )\n      })\n    }\n  }\n  render () {\n    return (\n      <div>\n        {this.productsRender()}\n      </div>\n    )\n  }\n}\nconst graphql_filter = graphql(Query)(App);\nexport default withData(graphql_filter);\n\n\n// WEBPACK FOOTER //\n// pages/index.js","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = @babel/runtime/regenerator\n// module chunks = 3","module.exports = require(\"graphql-tag\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-tag\"\n// module id = graphql-tag\n// module chunks = 3","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = isomorphic-fetch\n// module chunks = 3","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = prop-types\n// module chunks = 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 3","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = react-apollo\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAHA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AAZA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAAA;AACA;AADA;AA+BA;AACA;AAEA;AACA;AACA;AACA;AAFA;AADA;AACA;AAnCA;AAAA;AA2CA;AACA;AA5CA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAgDA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AArDA;AAAA;AAAA;AAuDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AA5DA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAFA;AA8DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtBA;AACA;AAuBA;AACA;;;;;;;;;;;;;;;ACpCA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}